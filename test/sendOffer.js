const webrtc = require('../index');
const ffofferbase64 = "eyJ0eXBlIjoib2ZmZXIiLCJzZHAiOiJ2PTBcclxubz1tb3ppbGxhLi4uVEhJU19JU19TRFBBUlRBLTY4LjMuMCAzNTkwNzEzNzIyMDI0MDg4NDUwIDAgSU4gSVA0IDAuMC4wLjBcclxucz0tXHJcbnQ9MCAwXHJcbmE9c2VuZHJlY3ZcclxuYT1maW5nZXJwcmludDpzaGEtMjU2IDY5OkNGOjcxOkU3OjNEOjQzOjYwOkE1OjlBOkZCOjEwOjY0OjUyOkE1OkUwOkEwOjYzOjhCOjcxOkQ4Ojg5OjZCOjdBOjhEOjA0OjBBOjdEOkY4OjhFOkQ3OjUyOkJEXHJcbmE9Z3JvdXA6QlVORExFIDAgMSAyXHJcbmE9aWNlLW9wdGlvbnM6dHJpY2tsZVxyXG5hPW1zaWQtc2VtYW50aWM6V01TICpcclxubT1hdWRpbyA2MTEwMiBVRFAvVExTL1JUUC9TQVZQRiAxMDkgOSAwIDggMTAxXHJcbmM9SU4gSVA0IDE5Mi4xNjguMjA0LjE4OFxyXG5hPWNhbmRpZGF0ZTowIDEgVURQIDIxMjIyNTI1NDMgMTkyLjE2OC4yMDQuMTg4IDYxMTAyIHR5cCBob3N0XHJcbmE9Y2FuZGlkYXRlOjIgMSBUQ1AgMjEwNTUyNDQ3OSAxOTIuMTY4LjIwNC4xODggOSB0eXAgaG9zdCB0Y3B0eXBlIGFjdGl2ZVxyXG5hPWNhbmRpZGF0ZTowIDIgVURQIDIxMjIyNTI1NDIgMTkyLjE2OC4yMDQuMTg4IDYxMTAzIHR5cCBob3N0XHJcbmE9Y2FuZGlkYXRlOjIgMiBUQ1AgMjEwNTUyNDQ3OCAxOTIuMTY4LjIwNC4xODggOSB0eXAgaG9zdCB0Y3B0eXBlIGFjdGl2ZVxyXG5hPXJlY3Zvbmx5XHJcbmE9ZXh0bWFwOjEgdXJuOmlldGY6cGFyYW1zOnJ0cC1oZHJleHQ6c3NyYy1hdWRpby1sZXZlbFxyXG5hPWV4dG1hcDoyL3JlY3Zvbmx5IHVybjppZXRmOnBhcmFtczpydHAtaGRyZXh0OmNzcmMtYXVkaW8tbGV2ZWxcclxuYT1leHRtYXA6MyB1cm46aWV0ZjpwYXJhbXM6cnRwLWhkcmV4dDpzZGVzOm1pZFxyXG5hPWZtdHA6MTA5IG1heHBsYXliYWNrcmF0ZT00ODAwMDtzdGVyZW89MTt1c2VpbmJhbmRmZWM9MVxyXG5hPWZtdHA6MTAxIDAtMTVcclxuYT1pY2UtcHdkOjNiZmM5MWZhNzcxYjI1NGU5MDQxYmZhOGRmZDkxM2MxXHJcbmE9aWNlLXVmcmFnOjI1NjkyMTMyXHJcbmE9bWlkOjBcclxuYT1ydGNwOjYxMTAzIElOIElQNCAxOTIuMTY4LjIwNC4xODhcclxuYT1ydGNwLW11eFxyXG5hPXJ0cG1hcDoxMDkgb3B1cy80ODAwMC8yXHJcbmE9cnRwbWFwOjkgRzcyMi84MDAwLzFcclxuYT1ydHBtYXA6MCBQQ01VLzgwMDBcclxuYT1ydHBtYXA6OCBQQ01BLzgwMDBcclxuYT1ydHBtYXA6MTAxIHRlbGVwaG9uZS1ldmVudC84MDAwXHJcbmE9c2V0dXA6YWN0cGFzc1xyXG5hPXNzcmM6MTAzNzI1NjE4IGNuYW1lOnthMzhmODc2ZS1mZDcxLTQxZWItYWU2OS1mNWIwNzUwNTYzYTZ9XHJcbm09dmlkZW8gNjExMDQgVURQL1RMUy9SVFAvU0FWUEYgMTIwIDEyMSAxMjYgOTdcclxuYz1JTiBJUDQgMTkyLjE2OC4yMDQuMTg4XHJcbmE9Y2FuZGlkYXRlOjAgMSBVRFAgMjEyMjI1MjU0MyAxOTIuMTY4LjIwNC4xODggNjExMDQgdHlwIGhvc3RcclxuYT1jYW5kaWRhdGU6MiAxIFRDUCAyMTA1NTI0NDc5IDE5Mi4xNjguMjA0LjE4OCA5IHR5cCBob3N0IHRjcHR5cGUgYWN0aXZlXHJcbmE9Y2FuZGlkYXRlOjAgMiBVRFAgMjEyMjI1MjU0MiAxOTIuMTY4LjIwNC4xODggNjExMDUgdHlwIGhvc3RcclxuYT1jYW5kaWRhdGU6MiAyIFRDUCAyMTA1NTI0NDc4IDE5Mi4xNjguMjA0LjE4OCA5IHR5cCBob3N0IHRjcHR5cGUgYWN0aXZlXHJcbmE9cmVjdm9ubHlcclxuYT1leHRtYXA6MyB1cm46aWV0ZjpwYXJhbXM6cnRwLWhkcmV4dDpzZGVzOm1pZFxyXG5hPWV4dG1hcDo0IGh0dHA6Ly93d3cud2VicnRjLm9yZy9leHBlcmltZW50cy9ydHAtaGRyZXh0L2Ficy1zZW5kLXRpbWVcclxuYT1leHRtYXA6NSB1cm46aWV0ZjpwYXJhbXM6cnRwLWhkcmV4dDp0b2Zmc2V0XHJcbmE9Zm10cDoxMjYgcHJvZmlsZS1sZXZlbC1pZD00MmUwMWY7bGV2ZWwtYXN5bW1ldHJ5LWFsbG93ZWQ9MTtwYWNrZXRpemF0aW9uLW1vZGU9MVxyXG5hPWZtdHA6OTcgcHJvZmlsZS1sZXZlbC1pZD00MmUwMWY7bGV2ZWwtYXN5bW1ldHJ5LWFsbG93ZWQ9MVxyXG5hPWZtdHA6MTIwIG1heC1mcz0xMjI4ODttYXgtZnI9NjBcclxuYT1mbXRwOjEyMSBtYXgtZnM9MTIyODg7bWF4LWZyPTYwXHJcbmE9aWNlLXB3ZDozYmZjOTFmYTc3MWIyNTRlOTA0MWJmYThkZmQ5MTNjMVxyXG5hPWljZS11ZnJhZzoyNTY5MjEzMlxyXG5hPW1pZDoxXHJcbmE9cnRjcDo2MTEwNSBJTiBJUDQgMTkyLjE2OC4yMDQuMTg4XHJcbmE9cnRjcC1mYjoxMjAgbmFja1xyXG5hPXJ0Y3AtZmI6MTIwIG5hY2sgcGxpXHJcbmE9cnRjcC1mYjoxMjAgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6MTIwIGdvb2ctcmVtYlxyXG5hPXJ0Y3AtZmI6MTIxIG5hY2tcclxuYT1ydGNwLWZiOjEyMSBuYWNrIHBsaVxyXG5hPXJ0Y3AtZmI6MTIxIGNjbSBmaXJcclxuYT1ydGNwLWZiOjEyMSBnb29nLXJlbWJcclxuYT1ydGNwLWZiOjEyNiBuYWNrXHJcbmE9cnRjcC1mYjoxMjYgbmFjayBwbGlcclxuYT1ydGNwLWZiOjEyNiBjY20gZmlyXHJcbmE9cnRjcC1mYjoxMjYgZ29vZy1yZW1iXHJcbmE9cnRjcC1mYjo5NyBuYWNrXHJcbmE9cnRjcC1mYjo5NyBuYWNrIHBsaVxyXG5hPXJ0Y3AtZmI6OTcgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6OTcgZ29vZy1yZW1iXHJcbmE9cnRjcC1tdXhcclxuYT1ydHBtYXA6MTIwIFZQOC85MDAwMFxyXG5hPXJ0cG1hcDoxMjEgVlA5LzkwMDAwXHJcbmE9cnRwbWFwOjEyNiBIMjY0LzkwMDAwXHJcbmE9cnRwbWFwOjk3IEgyNjQvOTAwMDBcclxuYT1zZXR1cDphY3RwYXNzXHJcbmE9c3NyYzoxODk5NTg4NzI2IGNuYW1lOnthMzhmODc2ZS1mZDcxLTQxZWItYWU2OS1mNWIwNzUwNTYzYTZ9XHJcbm09dmlkZW8gMCBVRFAvVExTL1JUUC9TQVZQRiAxMjAgMTIxIDEyNiA5N1xyXG5jPUlOIElQNCAwLjAuMC4wXHJcbmE9YnVuZGxlLW9ubHlcclxuYT1yZWN2b25seVxyXG5hPWV4dG1hcDozIHVybjppZXRmOnBhcmFtczpydHAtaGRyZXh0OnNkZXM6bWlkXHJcbmE9ZXh0bWFwOjQgaHR0cDovL3d3dy53ZWJydGMub3JnL2V4cGVyaW1lbnRzL3J0cC1oZHJleHQvYWJzLXNlbmQtdGltZVxyXG5hPWV4dG1hcDo1IHVybjppZXRmOnBhcmFtczpydHAtaGRyZXh0OnRvZmZzZXRcclxuYT1mbXRwOjEyNiBwcm9maWxlLWxldmVsLWlkPTQyZTAxZjtsZXZlbC1hc3ltbWV0cnktYWxsb3dlZD0xO3BhY2tldGl6YXRpb24tbW9kZT0xXHJcbmE9Zm10cDo5NyBwcm9maWxlLWxldmVsLWlkPTQyZTAxZjtsZXZlbC1hc3ltbWV0cnktYWxsb3dlZD0xXHJcbmE9Zm10cDoxMjAgbWF4LWZzPTEyMjg4O21heC1mcj02MFxyXG5hPWZtdHA6MTIxIG1heC1mcz0xMjI4ODttYXgtZnI9NjBcclxuYT1pY2UtcHdkOjNiZmM5MWZhNzcxYjI1NGU5MDQxYmZhOGRmZDkxM2MxXHJcbmE9aWNlLXVmcmFnOjI1NjkyMTMyXHJcbmE9bWlkOjJcclxuYT1ydGNwLWZiOjEyMCBuYWNrXHJcbmE9cnRjcC1mYjoxMjAgbmFjayBwbGlcclxuYT1ydGNwLWZiOjEyMCBjY20gZmlyXHJcbmE9cnRjcC1mYjoxMjAgZ29vZy1yZW1iXHJcbmE9cnRjcC1mYjoxMjEgbmFja1xyXG5hPXJ0Y3AtZmI6MTIxIG5hY2sgcGxpXHJcbmE9cnRjcC1mYjoxMjEgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6MTIxIGdvb2ctcmVtYlxyXG5hPXJ0Y3AtZmI6MTI2IG5hY2tcclxuYT1ydGNwLWZiOjEyNiBuYWNrIHBsaVxyXG5hPXJ0Y3AtZmI6MTI2IGNjbSBmaXJcclxuYT1ydGNwLWZiOjEyNiBnb29nLXJlbWJcclxuYT1ydGNwLWZiOjk3IG5hY2tcclxuYT1ydGNwLWZiOjk3IG5hY2sgcGxpXHJcbmE9cnRjcC1mYjo5NyBjY20gZmlyXHJcbmE9cnRjcC1mYjo5NyBnb29nLXJlbWJcclxuYT1ydGNwLW11eFxyXG5hPXJ0cG1hcDoxMjAgVlA4LzkwMDAwXHJcbmE9cnRwbWFwOjEyMSBWUDkvOTAwMDBcclxuYT1ydHBtYXA6MTI2IEgyNjQvOTAwMDBcclxuYT1ydHBtYXA6OTcgSDI2NC85MDAwMFxyXG5hPXNldHVwOmFjdHBhc3NcclxuYT1zc3JjOjM3OTcwMjY2MDggY25hbWU6e2EzOGY4NzZlLWZkNzEtNDFlYi1hZTY5LWY1YjA3NTA1NjNhNn1cclxuIn0=";
const chromeOfferbase64 = "";
const test = "eyJ0eXBlIjoib2ZmZXIiLCJzZHAiOiJ2PTBcclxubz1tb3ppbGxhLi4uVEhJU19JU19TRFBBUlRBLTY4LjQuMiA3NjgwODIxMjYxNDEwNDk3MzI5IDAgSU4gSVA0IDAuMC4wLjBcclxucz0tXHJcbnQ9MCAwXHJcbmE9c2VuZHJlY3ZcclxuYT1maW5nZXJwcmludDpzaGEtMjU2IDQ1OkNCOkQ4OkUzOkNGOjlEOjk1OjY4OjZEOkZDOjI2OjJFOkQ4OjUzOkFBOjI5OjkwOjVBOjVDOjk4Ojc0OkU0OjNGOkQ0OjBBOjcwOkJBOjQxOjVEOkRDOjQzOjVDXHJcbmE9Z3JvdXA6QlVORExFIDAgMSAyXHJcbmE9aWNlLW9wdGlvbnM6dHJpY2tsZVxyXG5hPW1zaWQtc2VtYW50aWM6V01TICpcclxubT1hdWRpbyA2MzA2NiBVRFAvVExTL1JUUC9TQVZQRiAxMDkgOSAwIDggMTAxXHJcbmM9SU4gSVA0IDE5Mi4xNjguMjA0LjE4OFxyXG5hPWNhbmRpZGF0ZTowIDEgVURQIDIxMjIyNTI1NDMgMTkyLjE2OC4yMDQuMTg4IDYzMDY2IHR5cCBob3N0XHJcbmE9Y2FuZGlkYXRlOjIgMSBUQ1AgMjEwNTUyNDQ3OSAxOTIuMTY4LjIwNC4xODggOSB0eXAgaG9zdCB0Y3B0eXBlIGFjdGl2ZVxyXG5hPWNhbmRpZGF0ZTowIDIgVURQIDIxMjIyNTI1NDIgMTkyLjE2OC4yMDQuMTg4IDYzMDY3IHR5cCBob3N0XHJcbmE9Y2FuZGlkYXRlOjIgMiBUQ1AgMjEwNTUyNDQ3OCAxOTIuMTY4LjIwNC4xODggOSB0eXAgaG9zdCB0Y3B0eXBlIGFjdGl2ZVxyXG5hPXJlY3Zvbmx5XHJcbmE9ZXh0bWFwOjEgdXJuOmlldGY6cGFyYW1zOnJ0cC1oZHJleHQ6c3NyYy1hdWRpby1sZXZlbFxyXG5hPWV4dG1hcDoyL3JlY3Zvbmx5IHVybjppZXRmOnBhcmFtczpydHAtaGRyZXh0OmNzcmMtYXVkaW8tbGV2ZWxcclxuYT1leHRtYXA6MyB1cm46aWV0ZjpwYXJhbXM6cnRwLWhkcmV4dDpzZGVzOm1pZFxyXG5hPWZtdHA6MTA5IG1heHBsYXliYWNrcmF0ZT00ODAwMDtzdGVyZW89MTt1c2VpbmJhbmRmZWM9MVxyXG5hPWZtdHA6MTAxIDAtMTVcclxuYT1pY2UtcHdkOjBiYzNhYjNhNzBjMWE5NzhlZmQ0YTllN2E1YjhhMTg3XHJcbmE9aWNlLXVmcmFnOjRjMDNmNzA0XHJcbmE9bWlkOjBcclxuYT1ydGNwOjYzMDY3IElOIElQNCAxOTIuMTY4LjIwNC4xODhcclxuYT1ydGNwLW11eFxyXG5hPXJ0cG1hcDoxMDkgb3B1cy80ODAwMC8yXHJcbmE9cnRwbWFwOjkgRzcyMi84MDAwLzFcclxuYT1ydHBtYXA6MCBQQ01VLzgwMDBcclxuYT1ydHBtYXA6OCBQQ01BLzgwMDBcclxuYT1ydHBtYXA6MTAxIHRlbGVwaG9uZS1ldmVudC84MDAwXHJcbmE9c2V0dXA6YWN0cGFzc1xyXG5hPXNzcmM6MTM1NzU5ODI0MSBjbmFtZTp7NTdhNDM3MzQtY2I1YS00MzYzLTlhYjUtMzc1YjhkMDg3NWJmfVxyXG5tPXZpZGVvIDYzMDY4IFVEUC9UTFMvUlRQL1NBVlBGIDEyMCAxMjEgMTI2IDk3XHJcbmM9SU4gSVA0IDE5Mi4xNjguMjA0LjE4OFxyXG5hPWNhbmRpZGF0ZTowIDEgVURQIDIxMjIyNTI1NDMgMTkyLjE2OC4yMDQuMTg4IDYzMDY4IHR5cCBob3N0XHJcbmE9Y2FuZGlkYXRlOjIgMSBUQ1AgMjEwNTUyNDQ3OSAxOTIuMTY4LjIwNC4xODggOSB0eXAgaG9zdCB0Y3B0eXBlIGFjdGl2ZVxyXG5hPWNhbmRpZGF0ZTowIDIgVURQIDIxMjIyNTI1NDIgMTkyLjE2OC4yMDQuMTg4IDYzMDY5IHR5cCBob3N0XHJcbmE9Y2FuZGlkYXRlOjIgMiBUQ1AgMjEwNTUyNDQ3OCAxOTIuMTY4LjIwNC4xODggOSB0eXAgaG9zdCB0Y3B0eXBlIGFjdGl2ZVxyXG5hPXJlY3Zvbmx5XHJcbmE9ZXh0bWFwOjMgdXJuOmlldGY6cGFyYW1zOnJ0cC1oZHJleHQ6c2RlczptaWRcclxuYT1leHRtYXA6NCBodHRwOi8vd3d3LndlYnJ0Yy5vcmcvZXhwZXJpbWVudHMvcnRwLWhkcmV4dC9hYnMtc2VuZC10aW1lXHJcbmE9ZXh0bWFwOjUgdXJuOmlldGY6cGFyYW1zOnJ0cC1oZHJleHQ6dG9mZnNldFxyXG5hPWZtdHA6MTI2IHByb2ZpbGUtbGV2ZWwtaWQ9NDJlMDFmO2xldmVsLWFzeW1tZXRyeS1hbGxvd2VkPTE7cGFja2V0aXphdGlvbi1tb2RlPTFcclxuYT1mbXRwOjk3IHByb2ZpbGUtbGV2ZWwtaWQ9NDJlMDFmO2xldmVsLWFzeW1tZXRyeS1hbGxvd2VkPTFcclxuYT1mbXRwOjEyMCBtYXgtZnM9MTIyODg7bWF4LWZyPTYwXHJcbmE9Zm10cDoxMjEgbWF4LWZzPTEyMjg4O21heC1mcj02MFxyXG5hPWljZS1wd2Q6MGJjM2FiM2E3MGMxYTk3OGVmZDRhOWU3YTViOGExODdcclxuYT1pY2UtdWZyYWc6NGMwM2Y3MDRcclxuYT1taWQ6MVxyXG5hPXJ0Y3A6NjMwNjkgSU4gSVA0IDE5Mi4xNjguMjA0LjE4OFxyXG5hPXJ0Y3AtZmI6MTIwIG5hY2tcclxuYT1ydGNwLWZiOjEyMCBuYWNrIHBsaVxyXG5hPXJ0Y3AtZmI6MTIwIGNjbSBmaXJcclxuYT1ydGNwLWZiOjEyMCBnb29nLXJlbWJcclxuYT1ydGNwLWZiOjEyMSBuYWNrXHJcbmE9cnRjcC1mYjoxMjEgbmFjayBwbGlcclxuYT1ydGNwLWZiOjEyMSBjY20gZmlyXHJcbmE9cnRjcC1mYjoxMjEgZ29vZy1yZW1iXHJcbmE9cnRjcC1mYjoxMjYgbmFja1xyXG5hPXJ0Y3AtZmI6MTI2IG5hY2sgcGxpXHJcbmE9cnRjcC1mYjoxMjYgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6MTI2IGdvb2ctcmVtYlxyXG5hPXJ0Y3AtZmI6OTcgbmFja1xyXG5hPXJ0Y3AtZmI6OTcgbmFjayBwbGlcclxuYT1ydGNwLWZiOjk3IGNjbSBmaXJcclxuYT1ydGNwLWZiOjk3IGdvb2ctcmVtYlxyXG5hPXJ0Y3AtbXV4XHJcbmE9cnRwbWFwOjEyMCBWUDgvOTAwMDBcclxuYT1ydHBtYXA6MTIxIFZQOS85MDAwMFxyXG5hPXJ0cG1hcDoxMjYgSDI2NC85MDAwMFxyXG5hPXJ0cG1hcDo5NyBIMjY0LzkwMDAwXHJcbmE9c2V0dXA6YWN0cGFzc1xyXG5hPXNzcmM6MTQ0NzIyNDMwNCBjbmFtZTp7NTdhNDM3MzQtY2I1YS00MzYzLTlhYjUtMzc1YjhkMDg3NWJmfVxyXG5tPXZpZGVvIDAgVURQL1RMUy9SVFAvU0FWUEYgMTIwIDEyMSAxMjYgOTdcclxuYz1JTiBJUDQgMC4wLjAuMFxyXG5hPWJ1bmRsZS1vbmx5XHJcbmE9cmVjdm9ubHlcclxuYT1leHRtYXA6MyB1cm46aWV0ZjpwYXJhbXM6cnRwLWhkcmV4dDpzZGVzOm1pZFxyXG5hPWV4dG1hcDo0IGh0dHA6Ly93d3cud2VicnRjLm9yZy9leHBlcmltZW50cy9ydHAtaGRyZXh0L2Ficy1zZW5kLXRpbWVcclxuYT1leHRtYXA6NSB1cm46aWV0ZjpwYXJhbXM6cnRwLWhkcmV4dDp0b2Zmc2V0XHJcbmE9Zm10cDoxMjYgcHJvZmlsZS1sZXZlbC1pZD00MmUwMWY7bGV2ZWwtYXN5bW1ldHJ5LWFsbG93ZWQ9MTtwYWNrZXRpemF0aW9uLW1vZGU9MVxyXG5hPWZtdHA6OTcgcHJvZmlsZS1sZXZlbC1pZD00MmUwMWY7bGV2ZWwtYXN5bW1ldHJ5LWFsbG93ZWQ9MVxyXG5hPWZtdHA6MTIwIG1heC1mcz0xMjI4ODttYXgtZnI9NjBcclxuYT1mbXRwOjEyMSBtYXgtZnM9MTIyODg7bWF4LWZyPTYwXHJcbmE9aWNlLXB3ZDowYmMzYWIzYTcwYzFhOTc4ZWZkNGE5ZTdhNWI4YTE4N1xyXG5hPWljZS11ZnJhZzo0YzAzZjcwNFxyXG5hPW1pZDoyXHJcbmE9cnRjcC1mYjoxMjAgbmFja1xyXG5hPXJ0Y3AtZmI6MTIwIG5hY2sgcGxpXHJcbmE9cnRjcC1mYjoxMjAgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6MTIwIGdvb2ctcmVtYlxyXG5hPXJ0Y3AtZmI6MTIxIG5hY2tcclxuYT1ydGNwLWZiOjEyMSBuYWNrIHBsaVxyXG5hPXJ0Y3AtZmI6MTIxIGNjbSBmaXJcclxuYT1ydGNwLWZiOjEyMSBnb29nLXJlbWJcclxuYT1ydGNwLWZiOjEyNiBuYWNrXHJcbmE9cnRjcC1mYjoxMjYgbmFjayBwbGlcclxuYT1ydGNwLWZiOjEyNiBjY20gZmlyXHJcbmE9cnRjcC1mYjoxMjYgZ29vZy1yZW1iXHJcbmE9cnRjcC1mYjo5NyBuYWNrXHJcbmE9cnRjcC1mYjo5NyBuYWNrIHBsaVxyXG5hPXJ0Y3AtZmI6OTcgY2NtIGZpclxyXG5hPXJ0Y3AtZmI6OTcgZ29vZy1yZW1iXHJcbmE9cnRjcC1tdXhcclxuYT1ydHBtYXA6MTIwIFZQOC85MDAwMFxyXG5hPXJ0cG1hcDoxMjEgVlA5LzkwMDAwXHJcbmE9cnRwbWFwOjEyNiBIMjY0LzkwMDAwXHJcbmE9cnRwbWFwOjk3IEgyNjQvOTAwMDBcclxuYT1zZXR1cDphY3RwYXNzXHJcbmE9c3NyYzo4MzQxOTI4MzggY25hbWU6ezU3YTQzNzM0LWNiNWEtNDM2My05YWI1LTM3NWI4ZDA4NzViZn1cclxuIn0=";
let offer = JSON.parse(new Buffer(test, 'base64').toString());

console.log("BROWER OFFER");
console.log(offer);
const localOffer = webrtc.init(offer);

console.log("LOCAL OFFER");
console.log(localOffer);

const rawData = require('fs').readFileSync(__dirname + "/output.h264.raw");
webrtc.writeFrame(rawData);

